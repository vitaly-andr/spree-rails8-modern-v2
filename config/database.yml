# SQLite. Versions 3.8.0 and up are supported.
#   gem install sqlite3
#
# Install the pg driver:
#   gem install pg
# On macOS with Homebrew:
#   gem install pg -- --with-pg-config=/usr/local/bin/pg_config
# On Windows:
#   gem install pg
#       Choose the win32 build.
#       Install PostgreSQL and put its /bin directory on your path.
#
# Configure Using Gemfile
# gem "pg"
#
default: &default
  adapter: sqlite3
  pool: <%= ENV.fetch("RAILS_MAX_THREADS") { 5 } %>
  timeout: 5000

# PostgreSQL configuration (commented out)
# default: &default
#   adapter: postgresql
#   encoding: unicode
#   host: 192.168.1.242
#   username: postgres
#   password: 1202
#   pool: <%= ENV.fetch("RAILS_MAX_THREADS") { 5 } %>

development:
  primary:
    <<: *default
    database: storage/databases/development.sqlite3
  # PostgreSQL version:
  # primary:
  #   <<: *default
  #   database: spree_rails8_modern_fresh_development
  solid_queue:
    adapter: sqlite3
    database: storage/databases/solid_queue_development.sqlite3
  solid_cable:
    adapter: sqlite3
    database: storage/databases/solid_cable_development.sqlite3
  solid_cache:
    adapter: sqlite3
    database: storage/databases/solid_cache_development.sqlite3

staging:
  primary:
    <<: *default
    database: storage/databases/staging.sqlite3
  solid_queue:
    adapter: sqlite3
    database: storage/databases/solid_queue_staging.sqlite3
  solid_cable:
    adapter: sqlite3
    database: storage/databases/solid_cable_staging.sqlite3
  solid_cache:
    adapter: sqlite3
    database: storage/databases/solid_cache_staging.sqlite3

test:
  primary:
    <<: *default
    database: storage/databases/test.sqlite3
  # PostgreSQL version:
  # primary:
  #   <<: *default
  #   database: spree_rails8_modern_fresh_test
  solid_queue:
    adapter: sqlite3
    database: storage/databases/solid_queue_test.sqlite3
  solid_cable:
    adapter: sqlite3
    database: storage/databases/solid_cable_test.sqlite3
  solid_cache:
    adapter: sqlite3
    database: storage/databases/solid_cache_test.sqlite3

production:
  primary:
    <<: *default
    database: storage/databases/production.sqlite3
  # PostgreSQL version:
  # primary:
  #   <<: *default
  #   database: spree_rails8_modern_fresh_production
  solid_queue:
    adapter: sqlite3
    database: storage/databases/solid_queue_production.sqlite3
  solid_cable:
    adapter: sqlite3
    database: storage/databases/solid_cable_production.sqlite3
  solid_cache:
    adapter: sqlite3
    database: storage/databases/solid_cache_production.sqlite3

# PostgreSQL configuration comments (preserved)
# The specified database role being used to connect to PostgreSQL.
# To create additional roles in PostgreSQL see `$ createuser --help`.
# When left blank, PostgreSQL will use the default role. This is
# the same name as the operating system user running Rails.
#username: materialize_1_c

# The password associated with the PostgreSQL role (username).
#password:

# Connect on a TCP socket. Omitted by default since the client uses a
# domain socket that doesn't need configuration. Windows does not have
# domain sockets, so uncomment these lines.
#host: localhost

# The TCP port the server listens on. Defaults to 5432.
# If your server runs on a different port number, change accordingly.
#port: 5432

# Schema search path. The server defaults to $user,public
#schema_search_path: myapp,sharedapp,public

# Minimum log levels, in increasing order:
#   debug5, debug4, debug3, debug2, debug1,
#   log, notice, warning, error, fatal, and panic
# Defaults to warning.
#min_messages: notice

# Warning: The database defined as "test" will be erased and
# re-generated from your development database when you run "rake".
# Do not set this db to the same as development or production.

# like your database password, in your source code. If your source code is
# ever seen by anyone, they now have access to your database.
#
# Instead, provide the password or a full connection URL as an environment
# variable when you boot the app. For example:
#
#   DATABASE_URL="postgres://myuser:mypass@localhost/somedatabase"
#
# If the connection URL is provided in the special DATABASE_URL environment
# variable, Rails will automatically merge its configuration values on top of
# the values provided in this file. Alternatively, you can specify a connection
# URL environment variable explicitly:
#
#   production:
#     url: <%= ENV["MY_APP_DATABASE_URL"] %>
#
# Read https://guides.rubyonrails.org/configuring.html#configuring-a-database
# for a full overview on how database connection configuration can be specified.
