import { Controller } from '@hotwired/stimulus'
import { lockScroll, unlockScroll } from '../../../helpers/spree/core/scroll_lock'

export default class extends Controller {
  static targets = ['overlay', 'menu']
  static values = { open: Boolean }
  static classes = ['invisible', 'visible']

  connect() {
    console.log('üîå Slideover controller connected to:', this.element)
    console.log('üîå Controller identifier:', this.identifier)
    
    // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º Turbo Stream –¥–µ–π—Å—Ç–≤–∏—è
    Turbo.StreamActions[`${this.identifier}:open`] = this.remoteOpen(this)
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    this.element.setAttribute('aria-hidden', !this.openValue)
    
    // –ï—Å–ª–∏ overlay –∏–∑–Ω–∞—á–∞–ª—å–Ω–æ —Å–∫—Ä—ã—Ç, —É–±–µ–∂–¥–∞–µ–º—Å—è —á—Ç–æ –æ–Ω hidden
    if (!this.openValue && this.hasOverlayTarget) {
      this.overlayTarget.classList.add('hidden')
    }
  }

  disconnect() {
    console.log('üîå Slideover controller disconnected')
    delete Turbo.StreamActions[`${this.identifier}:open`]
    unlockScroll() // –£–±–µ–∂–¥–∞–µ–º—Å—è —á—Ç–æ —Å–∫—Ä–æ–ª–ª —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞
  }

  // –û—Å–Ω–æ–≤–Ω—ã–µ –º–µ—Ç–æ–¥—ã
  toggle() {
    console.log('üîÑ Toggle called, current openValue:', this.openValue)
    this.openValue = !this.openValue
  }

  open() {
    console.log('üö™ Open called')
    this.openValue = true
  }

  close() {
    console.log('üö™ Close called')
    this.openValue = false
  }

  hide(event) {
    console.log('üëª Hide called, event:', event)
    
    // –ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û: –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–ª–∏–∫ –±—ã–ª –í–ù–ï slideover'–∞
    if (event && this.openValue) {
      // –ï—Å–ª–∏ –∫–ª–∏–∫ –±—ã–ª –≤–Ω—É—Ç—Ä–∏ overlay –∏–ª–∏ menu - –ù–ï –∑–∞–∫—Ä—ã–≤–∞–µ–º
      if (this.hasOverlayTarget && this.overlayTarget.contains(event.target)) {
        console.log('üö´ Click inside overlay - not hiding')
        return
      }
      
      if (this.hasMenuTarget && this.menuTarget.contains(event.target)) {
        console.log('üö´ Click inside menu - not hiding')
        return
      }
      
      // –ï—Å–ª–∏ –∫–ª–∏–∫ –±—ã–ª –Ω–∞ –∫–Ω–æ–ø–∫–µ toggle - –ù–ï –∑–∞–∫—Ä—ã–≤–∞–µ–º (toggle —Å–∞–º —É–ø—Ä–∞–≤–ª—è–µ—Ç)
      const toggleButtons = this.element.querySelectorAll(`[data-action*="${this.identifier}#toggle"]`)
      for (const button of toggleButtons) {
        if (button.contains(event.target)) {
          console.log('üö´ Click on toggle button - not hiding')
          return
        }
      }
    }
    
    console.log('‚úÖ Valid hide - closing slideover')
    this.close()
  }

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è
  openValueChanged() {
    console.log('üìä openValue changed to:', this.openValue)
    if (this.openValue) {
      this._show()
    } else {
      this._hide()
    }
  }

  // Turbo Stream –ø–æ–¥–¥–µ—Ä–∂–∫–∞
  remoteOpen(controller) {
    return function () {
      console.log('üì° Remote open called for target:', this.target)
      if (this.target === controller.overlayTarget?.id) {
        controller.openValue = true
      }
    }
  }

  // –ü—Ä–∏–≤–∞—Ç–Ω—ã–µ –º–µ—Ç–æ–¥—ã
  _show() {
    console.log('üëÅÔ∏è _show called')
    
    if (!this.hasOverlayTarget || !this.hasMenuTarget) {
      console.warn('‚ö†Ô∏è Missing required targets for slideover')
      return
    }

    const headerController = this.application.getControllerForElementAndIdentifier(this.element, 'header')
    headerController?.freeze()

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º overlay
    this.overlayTarget.classList.remove('hidden')
    
    // –ü—Ä–∏–º–µ–Ω—è–µ–º visible –∫–ª–∞—Å—Å—ã
    this._applyClasses(this.visibleClasses, this.invisibleClasses)
    
    // –ë–ª–æ–∫–∏—Ä—É–µ–º —Å–∫—Ä–æ–ª–ª –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–±—ã—Ç–∏–µ
    lockScroll()
    this.element.setAttribute('aria-hidden', 'false')
    window.dispatchEvent(new Event('slideover:open'))
    
    console.log('‚úÖ Slideover shown')
  }

  _hide() {
    console.log('üôà _hide called')
    
    if (!this.hasOverlayTarget || !this.hasMenuTarget) {
      return
    }

    const headerController = this.application.getControllerForElementAndIdentifier(this.element, 'header')
    headerController?.unfreeze()

    // –ü—Ä–∏–º–µ–Ω—è–µ–º invisible –∫–ª–∞—Å—Å—ã
    this._applyClasses(this.invisibleClasses, this.visibleClasses)
    
    // –°–∫—Ä—ã–≤–∞–µ–º overlay –ø–æ—Å–ª–µ –∞–Ω–∏–º–∞—Ü–∏–∏
    setTimeout(() => {
      if (!this.openValue && this.hasOverlayTarget) {
        this.overlayTarget.classList.add('hidden')
      }
    }, 300) // –í—Ä–µ–º—è –¥–æ–ª–∂–Ω–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å CSS transition
    
    // –†–∞–∑–±–ª–æ–∫–∏—Ä—É–µ–º —Å–∫—Ä–æ–ª–ª
    unlockScroll()
    this.element.setAttribute('aria-hidden', 'true')
    
    console.log('‚úÖ Slideover hidden')
  }

  _applyClasses(addClasses, removeClasses) {
    if (!this.hasOverlayTarget || !this.hasMenuTarget) {
      return
    }

    // –ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û: –†–∞–∑–¥–µ–ª—è–µ–º –∫–ª–∞—Å—Å—ã –ø–æ –∑–∞–ø—è—Ç–æ–π!
    const addClassList = addClasses.flatMap(cls => cls.split(','))
    const removeClassList = removeClasses.flatMap(cls => cls.split(','))

    console.log('üé® Parsed classes - add:', addClassList, 'remove:', removeClassList)

    // –ü—Ä–∏–º–µ–Ω—è–µ–º –∫–ª–∞—Å—Å—ã –∫ overlay
    this.overlayTarget.classList.remove(...removeClassList)
    this.overlayTarget.classList.add(...addClassList)
    
    // –ü—Ä–∏–º–µ–Ω—è–µ–º –∫–ª–∞—Å—Å—ã –∫ menu
    this.menuTarget.classList.remove(...removeClassList)
    this.menuTarget.classList.add(...addClassList)
    
    console.log('üé® Applied classes to overlay and menu')
  }
}
